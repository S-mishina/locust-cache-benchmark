name: End-to-end tests

on:
  workflow_call:
    inputs:
      cache-platform:
        required: true
        type: string
        description: 'Redis or Valkey'
      cache-version:
        required: false
        type: string
        default: '6'
        description: 'version of the cache'
      cache-host:
        required: false
        type: string
        default: '127.0.0.1'
        description: 'host of the cache'
      cache-port:
        required: false
        type: number
        default: 7100
        description: 'port of the cache'
      cache-hit-rate:
        required: false
        type: number
        default: 0.5
        description: 'hit rate of the cache'
      cache-ssl:
        required: false
        type: boolean
        default: False
        description: 'True or False'
      loadtest-duration:
        required: false
        type: number
        default: 30
        description: 'duration of the load test'

jobs:
  e2etest-cache:
    runs-on: ubuntu-24.04
    permissions:
      packages: write
      contents: read
      id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Docker Compose
        run: sudo apt-get update && sudo apt-get install -y docker-compose

      - name: Set up Python
        uses: actions/setup-python@v5.6.0
        with:
          python-version: '3.10'

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: latest
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --only=main

      - name: Install project
        run: poetry install --only=main

      - name: Run E2E test for Redis
        if: ${{ inputs.cache-platform == 'redis' }}
        run: |
          docker-compose -f docker-compose-${{ inputs.cache-platform }}.yml up -d && \
          sleep 60 && \
          poetry run locust_cache_benchmark init ${{ inputs.cache-platform }} -f ${{ inputs.cache-host }} -p ${{ inputs.cache-port }} --ssl ${{ inputs.cache-ssl }} && \
          poetry run locust_cache_benchmark loadtest local ${{ inputs.cache-platform }} -f ${{ inputs.cache-host }} -p ${{ inputs.cache-port }} -r ${{ inputs.cache-hit-rate }} -d ${{ inputs.loadtest-duration }} -c 1 -n 1 -k 1 -t 60 --ssl ${{ inputs.cache-ssl }}

      - name: Run E2E test for Valkey
        if: ${{ inputs.cache-platform == 'valkey' }}
        run: |
          docker-compose -f docker-compose-${{ inputs.cache-platform }}.yml up -d
          echo "Waiting for Valkey cluster initialization..."
          sleep 180
          echo "Checking cluster status..."
          docker logs valkey-node-0 || true
          docker logs valkey-cluster-init || true
          poetry run locust_cache_benchmark init ${{ inputs.cache-platform }} -f ${{ inputs.cache-host }} -p 7200 --ssl ${{ inputs.cache-ssl }}
          poetry run locust_cache_benchmark loadtest local ${{ inputs.cache-platform }} -f ${{ inputs.cache-host }} -p 7200 -r ${{ inputs.cache-hit-rate }} -d ${{ inputs.loadtest-duration }} -c 1 -n 1 -k 1 -t 60 --ssl ${{ inputs.cache-ssl }}

      - name: output test result upload
        uses: actions/upload-artifact@v4
        with:
          name: e2etest-${{ inputs.cache-platform }}
          path: redis_test_results.csv
